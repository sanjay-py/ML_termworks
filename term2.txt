#dis-similarity using eucledian

import numpy as np
import matplotlib.pyplot as plt

p1=np.array([0,2])
p2=np.array([2,0])
p3=np.array([3,2])

def sum_coef(x,y):
    sum= np.sum((x-y)**2)
    
    s= np.sqrt(sum)
    return s

d1 = sum_coef(p1,p2)
print("Distance between p1 and p2:", d1)

d2 = sum_coef(p2,p3)
print("Distance between p3 and p3:", d2)

d3 = sum_coef(p1,p3)
print("Distance between p1 and p3:", d3)

--------------------------------------------------

#similarity using jaccard

#jaccard

x1=np.array([0,1,1,1])
y1=np.array([1,0,1,1])

def jaccard_sim(x,y):
   
    intersection = np.logical_and(x, y)
    union = np.logical_or(x, y)
    #print(intersection.sum())
    #print(union.sum())
    
    sim = intersection.sum() / union.sum()
    return sim

sim_xy = jaccard_sim(x1,y1)

print("Similarity between x and y: ", sim_xy)



